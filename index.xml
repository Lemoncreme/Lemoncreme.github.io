<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>benpm.github.io</title><link>https://benpm.github.io/</link><description>Recent content on benpm.github.io</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 11 Nov 2020 19:59:15 -0700</lastBuildDate><atom:link href="https://benpm.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Branching Fractal Generator</title><link>https://benpm.github.io/experiments/treegen/</link><pubDate>Wed, 11 Nov 2020 19:59:15 -0700</pubDate><guid>https://benpm.github.io/experiments/treegen/</guid><description/></item><item><title>Quadtrees for 2D Games with Moving Elements</title><link>https://benpm.github.io/blog/quadtrees/</link><pubDate>Sun, 20 Sep 2020 10:41:59 -0600</pubDate><guid>https://benpm.github.io/blog/quadtrees/</guid><description>A quadtree is a very useful data structure for performing spatial searches. I am currently using them in Tiletest for collision detection and monster behavior. Quadtrees partition 2D space into quadrants (stored as nodes in a tree), dividing these quadrants into smaller quadrants when they contain more than a certain threshold of elements (shown as dots):
There are a couple uses for this structure, one of the most useful is searching for the nearest element to a given location.</description></item><item><title>Cellular Automata in WebGL: Part 1</title><link>https://benpm.github.io/blog/gol_1/</link><pubDate>Tue, 28 Jul 2020 10:08:45 -0600</pubDate><guid>https://benpm.github.io/blog/gol_1/</guid><description>I&amp;rsquo;ve always been fascinated with cellular automata, like Conway&amp;rsquo;s Game of Life:
The idea that simple rules can produce structured, complex systems is beautiful to me. Of course I&amp;rsquo;m not the only one, Stephen Wolfram really has a thing for em&amp;rsquo;.
Anyways, I wanted a fun way to create and tweak cellular automata rules, so I decided to write a generalized cellular automaton simulator in WebGL. This post is about how it is implemented and what new interesting possibilities await!</description></item><item><title>CUDA Raytracer</title><link>https://benpm.github.io/projects/cuda-raytracer/</link><pubDate>Sat, 25 Jul 2020 11:11:17 -0600</pubDate><guid>https://benpm.github.io/projects/cuda-raytracer/</guid><description/></item><item><title>Cellular Automata in WebGL</title><link>https://benpm.github.io/experiments/cellular_automata/</link><pubDate>Fri, 24 Jul 2020 13:21:52 -0600</pubDate><guid>https://benpm.github.io/experiments/cellular_automata/</guid><description/></item><item><title>Rectangle (AABB) Collisions</title><link>https://benpm.github.io/blog/2d-top-down-collisions-with-rectangles-aabbs/</link><pubDate>Wed, 22 Jul 2020 22:10:40 -0600</pubDate><guid>https://benpm.github.io/blog/2d-top-down-collisions-with-rectangles-aabbs/</guid><description>Axis-aligned bounding boxes (AABBs) are very useful for doing simple collision detection and 2D physics. The basic idea is: loop through the boxes, checking for intersections with each other box. Then, you resolve these intersections by moving the boxes in the direction of the shortest intersection axis. So if the width of the intersection is smaller than its height, like it is here, then the boxes are moved on the x axis:</description></item><item><title>Game Development</title><link>https://benpm.github.io/gamedev/</link><pubDate>Wed, 22 Jul 2020 15:57:51 -0600</pubDate><guid>https://benpm.github.io/gamedev/</guid><description>I like to make games! I don&amp;rsquo;t finish them very often, but that doesn&amp;rsquo;t really matter, right? Here are some of the notable ones I&amp;rsquo;ve made:
Demon Island Work-in-progress adventure game.
I Stole a Wizard&amp;rsquo;s Sack and All I Got Was This Infinite Pocket Universe Mind-bending recursive puzzle game. Made for Ludum Dare 48.
Groovy B and the Great Cownundrum Join protagonist Groovy B, in their time-cursed Groundhog-Day-esque adventure to cure the town&amp;rsquo;s government and dairy industry of cow-rruption!</description></item><item><title>Hello World!</title><link>https://benpm.github.io/blog/hello_world/</link><pubDate>Wed, 22 Jul 2020 15:57:51 -0600</pubDate><guid>https://benpm.github.io/blog/hello_world/</guid><description>This site is created with Hugo and the theme is based off Codex. Here is a nice little youtube video:</description></item><item><title>Music</title><link>https://benpm.github.io/music/</link><pubDate>Wed, 22 Jul 2020 15:57:51 -0600</pubDate><guid>https://benpm.github.io/music/</guid><description>I make electronic music under the moniker Trope. You can find my music on SoundCloud, Spotify, Apple Music, and Bandcamp.
I primarily use FL Studio, although I have used Ableton Live quite a bit, too. I like to play around with samples, often creating instruments out of samples I found on the Internet or recorded myself.
I make music as a hobby, and I&amp;rsquo;m constantly learning! You can keep up with my music here.</description></item><item><title>Petting Zoo</title><link>https://benpm.github.io/projects/pettingzoo/</link><pubDate>Sat, 11 Jan 2020 11:11:17 -0600</pubDate><guid>https://benpm.github.io/projects/pettingzoo/</guid><description/></item></channel></rss>